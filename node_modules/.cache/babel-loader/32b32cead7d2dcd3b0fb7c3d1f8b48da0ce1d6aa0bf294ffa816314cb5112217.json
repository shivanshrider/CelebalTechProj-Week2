{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIVANSH TIWARI\\\\Downloads\\\\CTProject\\\\todo-app\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const savedTasks = localStorage.getItem('tasks');\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n  const [newTask, setNewTask] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('date');\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = e => {\n    e.preventDefault();\n    if (newTask.trim() === '') return;\n    const task = {\n      id: Date.now(),\n      text: newTask.trim(),\n      completed: false,\n      date: new Date().toISOString()\n    };\n    setTasks([...tasks, task]);\n    setNewTask('');\n  };\n  const removeTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  const toggleComplete = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'active') return !task.completed;\n    if (filter === 'completed') return task.completed;\n    return true;\n  });\n  const sortedTasks = [...filteredTasks].sort((a, b) => {\n    if (sortBy === 'date') {\n      return new Date(b.date) - new Date(a.date);\n    }\n    return a.text.localeCompare(b.text);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTask,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Add a new task...\",\n        className: \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"add-button\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"Sort by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Sort by Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tasks\",\n      children: sortedTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `task-item ${task.completed ? 'completed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleComplete(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-text\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTask(task.id),\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"nnCrSam+U+CQjJnvkI5Dubpo74o=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","newTask","setNewTask","filter","setFilter","sortBy","setSortBy","setItem","stringify","addTask","e","preventDefault","trim","task","id","Date","now","text","completed","date","toISOString","removeTask","taskId","toggleComplete","map","filteredTasks","sortedTasks","sort","a","b","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SHIVANSH TIWARI/Downloads/CTProject/todo-app/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = () => {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const savedTasks = localStorage.getItem('tasks');\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  });\r\n  const [newTask, setNewTask] = useState('');\r\n  const [filter, setFilter] = useState('all');\r\n  const [sortBy, setSortBy] = useState('date');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n    if (newTask.trim() === '') return;\r\n\r\n    const task = {\r\n      id: Date.now(),\r\n      text: newTask.trim(),\r\n      completed: false,\r\n      date: new Date().toISOString()\r\n    };\r\n\r\n    setTasks([...tasks, task]);\r\n    setNewTask('');\r\n  };\r\n\r\n  const removeTask = (taskId) => {\r\n    setTasks(tasks.filter(task => task.id !== taskId));\r\n  };\r\n\r\n  const toggleComplete = (taskId) => {\r\n    setTasks(tasks.map(task =>\r\n      task.id === taskId ? { ...task, completed: !task.completed } : task\r\n    ));\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    if (filter === 'active') return !task.completed;\r\n    if (filter === 'completed') return task.completed;\r\n    return true;\r\n  });\r\n\r\n  const sortedTasks = [...filteredTasks].sort((a, b) => {\r\n    if (sortBy === 'date') {\r\n      return new Date(b.date) - new Date(a.date);\r\n    }\r\n    return a.text.localeCompare(b.text);\r\n  });\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <h1>Todo List</h1>\r\n      \r\n      <form onSubmit={addTask} className=\"task-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Add a new task...\"\r\n          className=\"task-input\"\r\n        />\r\n        <button type=\"submit\" className=\"add-button\">Add Task</button>\r\n      </form>\r\n\r\n      <div className=\"controls\">\r\n        <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"active\">Active</option>\r\n          <option value=\"completed\">Completed</option>\r\n        </select>\r\n\r\n        <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\r\n          <option value=\"date\">Sort by Date</option>\r\n          <option value=\"text\">Sort by Name</option>\r\n        </select>\r\n      </div>\r\n\r\n      <ul className=\"tasks\">\r\n        {sortedTasks.map(task => (\r\n          <li key={task.id} className={`task-item ${task.completed ? 'completed' : ''}`}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}\r\n              onChange={() => toggleComplete(task.id)}\r\n            />\r\n            <span className=\"task-text\">{task.text}</span>\r\n            <button\r\n              onClick={() => removeTask(task.id)}\r\n              className=\"delete-button\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,MAAM;IACvC,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EACF,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACU,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACd,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMe,OAAO,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIV,OAAO,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE3B,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEhB,OAAO,CAACW,IAAI,CAAC,CAAC;MACpBM,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC;IAC/B,CAAC;IAEDzB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEmB,IAAI,CAAC,CAAC;IAC1BX,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMmB,UAAU,GAAIC,MAAM,IAAK;IAC7B3B,QAAQ,CAACD,KAAK,CAACS,MAAM,CAACU,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKQ,MAAM,CAAC,CAAC;EACpD,CAAC;EAED,MAAMC,cAAc,GAAID,MAAM,IAAK;IACjC3B,QAAQ,CAACD,KAAK,CAAC8B,GAAG,CAACX,IAAI,IACrBA,IAAI,CAACC,EAAE,KAAKQ,MAAM,GAAG;MAAE,GAAGT,IAAI;MAAEK,SAAS,EAAE,CAACL,IAAI,CAACK;IAAU,CAAC,GAAGL,IACjE,CAAC,CAAC;EACJ,CAAC;EAED,MAAMY,aAAa,GAAG/B,KAAK,CAACS,MAAM,CAACU,IAAI,IAAI;IACzC,IAAIV,MAAM,KAAK,QAAQ,EAAE,OAAO,CAACU,IAAI,CAACK,SAAS;IAC/C,IAAIf,MAAM,KAAK,WAAW,EAAE,OAAOU,IAAI,CAACK,SAAS;IACjD,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,MAAMQ,WAAW,GAAG,CAAC,GAAGD,aAAa,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACpD,IAAIxB,MAAM,KAAK,MAAM,EAAE;MACrB,OAAO,IAAIU,IAAI,CAACc,CAAC,CAACV,IAAI,CAAC,GAAG,IAAIJ,IAAI,CAACa,CAAC,CAACT,IAAI,CAAC;IAC5C;IACA,OAAOS,CAAC,CAACX,IAAI,CAACa,aAAa,CAACD,CAAC,CAACZ,IAAI,CAAC;EACrC,CAAC,CAAC;EAEF,oBACE1B,OAAA;IAAKwC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBzC,OAAA;MAAAyC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElB7C,OAAA;MAAM8C,QAAQ,EAAE5B,OAAQ;MAACsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC5CzC,OAAA;QACE+C,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtC,OAAQ;QACfuC,QAAQ,EAAG9B,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QAC5CG,WAAW,EAAC,mBAAmB;QAC/BX,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF7C,OAAA;QAAQ+C,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAEP7C,OAAA;MAAKwC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBzC,OAAA;QAAQgD,KAAK,EAAEpC,MAAO;QAACqC,QAAQ,EAAG9B,CAAC,IAAKN,SAAS,CAACM,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QAAAP,QAAA,gBAChEzC,OAAA;UAAQgD,KAAK,EAAC,KAAK;UAAAP,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChC7C,OAAA;UAAQgD,KAAK,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtC7C,OAAA;UAAQgD,KAAK,EAAC,WAAW;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAET7C,OAAA;QAAQgD,KAAK,EAAElC,MAAO;QAACmC,QAAQ,EAAG9B,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;QAAAP,QAAA,gBAChEzC,OAAA;UAAQgD,KAAK,EAAC,MAAM;UAAAP,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1C7C,OAAA;UAAQgD,KAAK,EAAC,MAAM;UAAAP,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN7C,OAAA;MAAIwC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAClBN,WAAW,CAACF,GAAG,CAACX,IAAI,iBACnBtB,OAAA;QAAkBwC,SAAS,EAAE,aAAalB,IAAI,CAACK,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;QAAAc,QAAA,gBAC5EzC,OAAA;UACE+C,IAAI,EAAC,UAAU;UACfK,OAAO,EAAE9B,IAAI,CAACK,SAAU;UACxBsB,QAAQ,EAAEA,CAAA,KAAMjB,cAAc,CAACV,IAAI,CAACC,EAAE;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACF7C,OAAA;UAAMwC,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEnB,IAAI,CAACI;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9C7C,OAAA;UACEqD,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACR,IAAI,CAACC,EAAE,CAAE;UACnCiB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC1B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAZFvB,IAAI,CAACC,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAnGID,QAAQ;AAAAqD,EAAA,GAARrD,QAAQ;AAqGd,eAAeA,QAAQ;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}